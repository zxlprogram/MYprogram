# painter
__a simple drawing app based on the surface, this is a vector graphic drawer.__
### Author:
__z.x.l__
### init version:
__1.0__
### release date: 
__2025-10-13__

### latest version: 
__1.10-alpha__

## enviornment
	Windows 11: jdk-25
	Ubuntu: jdk-25
	macOS don't have any testing record because of the macOS EULA, we can't use the macOS in virtual box

## version Description
	1.0:
    	release date: 2025-10-13
    	description:
   			We added basic features such as Surface, Scene, Point, Tool, and a color-changing system. Features can be added via the ToolList, and input is controlled by the Scene class.
   			            
	1.1:
    	release date: 2025-10-14
    description:
    		we added some operating feature like delete, Surface bigger/smaller and wrote the readme, we rewrite the choosing system of surface, and we also make the choosing surface became the highest layer, we added the circle shape
            
	1.2:
    	release date: 2025-10-15
    description:
        	we added copy feature, zoom in/out and translation
            
	1.3:
	    release date: 2025-10-16
	description:
		rewrite the readme file, fix the bug(delete error when scene is empty), added undo feature, but it has a bug: sometimes it will undo to wrong path, added the ctrl key event(with zoom in/out,undo, copy, ToolList move the saveInfo function to tool's constructure, toolList changed to protected

	1.4:
		release date: 2025-10-17
	description:
		remove arrow KeyEvent's translation feature, and changed to controlled by the mouse wheel, added the export/Load feature, descovered the bug of version 1.3 --when you redo a surface twice, it will redo one more time, added browsing mode

	1.4.1:
		release date: 2025-10-17
	description:
		fix the redo bug in version 1.3, fix the loading-format bug (when a wrong format file were been dragged into scene, it will show the dialog), descovered a new bug:  loading new file is possible to crush the refrash timer
	
	1.5-alpha:
		release date: 2025-10-19
	description:
		added the redo feature(ctrl+Y), fix the loading bug in version 1.4.1, undo the zoom in/out function and dragging function, make the offset and scale caculate only at first, make system delay 100ms at first(because I want to load the logo)
	
	1.5:
		release date: 2025-10-19
	description:
		fix the bug: the viewSide can save in the Event now, I added the Event class, it contains the List<Surface> and double scale,offsetX,offsetY, and let the logo add the surface in one time; I let the first step became the logo, because it is actually the first step, use the windows event listener replace the delay in execute method(which I added in version 1.5 alpha), custom file protocol changed: the first line have three number:scale, offsetX, offsetY, and belowing  line just like before
		
	1.6:
		release date: 2025-10-20
	description:
		finally added the layer manager!!! added the folder selecter for saving data
	
	1.7:
		release date: 2025-10-20
	description:
		let UI/UX great again!! we mark the choosing surface and added the picture on the shape generating tool and also rename undo,redo and layer to right English name, and choosing surface will not change the layer anymore, layer job will always work in layer manager
	
	1.7.1:
		release date: 2025-10-21
	description:
		make the browser used by cmd, made the linux version

	1.8:
		release date: 2025-10-22
	description:
		added the color selecter board, press shift to drag the object strightly, press ctrl to choosed multy surface or point, it will mark the point when the point is draggable, the draggingSurface and draggingPoint turns list instead of single object, you will never choosed the point under another object anymore
		
	1.9:
		release date: 2025-10-23
	description:
		added the bezier line, bezier surface, stright line, and added root class PainterObj, moved all object to extends that,and write new feature on file format: the object line first record is a vocabilary descripted the class, moved the layermanager's refresher to the main refresher, fix the circle, move the draw method to PainterObj, and let the subclass Override it, rebuild the structure of layermanager: remove the drawing method let the PainterObj method to done this
		
	1.10-alpha:
		release date: 2025-10-25
	description:
		add ctrl+A keys, fix the bug:the copy items noted in surface, keep rebuild structure, added the group and disgroup
		
## feature description
	-KeyEvent ctrl+C: copy the choosing surface
	-KeyEvent up/right: make the choosing surface bigger(if there have surface have been choosed)
	-KeyEvent down/left: make the choosing surface smaller(if there have surface have been choosed)
	-keyEvent delete: delete the choosing surface(if there have surface have been choosed) or delete the highest layer surface
	-KeyEvent ctrl+Z: undo the step
	-KeyEvent ctrl+Y: redo the step
	-KeyEvent ctrl+S: save the file
	-KeyEvent ctrl+A: select all
	-ctrl+MouseWheelEvent: zoom in/out
	-ctrl+MouseClickedEvent: choosed multy surface or point
	-MouseEvent left: when pressed, choosing surface will became null if the mouse didn't in any surface,otherwise choosing surface will became the highest layer surface, when dragged, it will check if the choosing point were exist,if it were exist than the point will follow the mouse; otherwise it will check if the choosing surface were exist, if it were exist than the surface will follow the mouse;if nothing were been choosed, we will translation All Object(it look like canvas translation but we actually move all surfaces)
	-MouseEvent right: change the color for choosing surface
	-Color changing: the textfield used to enter RGB, it is only allowed to enter the number which between 0 and 1, if the format is wrong, it will show the dialog to announce the error, you must enter the number again
	-dragging file: let the saving data added in your painter
	-Core: this app GUI is base on java swing
	-left side: the layer managing

## Possibly bug
	[linux]
	no current bug

	[windows]
	no current bug

## lacking feature
	-trying work the program in Java 8 and lower java runtime enviornment	
	
## Requirements
	-Java devolopment kit(JDK) 25
	-Windows 10+ or ubuntu

## download
	-https://github.com/zxlprogram/MYprogram/tree/master/Painter
	
## execution
	main app:
		-cd MYprogram/Painter/bin
		-java testing.Main
	
	browser:
		1.open cmd, path to the folder which have painterBrowser.jar
		2. .\painterBrowser.jar <your_painter_file_name.txt>
			exp: ".\painterBrowser.jar C:\Users\user\desktop\file.txt"
			
		or double click the jar file to open it, drag the file to the browser to check the file in browser
	
## Custom file protocol
	-at first line we have three number for scale, offsetX, offsetY, and below next line, it record for all of the surface, for each surface, we have a vocabilary, N points and a color,first vocabilary descripted the PaintObj class; every points have two doubles and color have three, each point's format:"X Y ",and than, " C " were followed, at last, Color format:"R G B" will followed behind
	
## program stucture
	Painter:
		bin:
			javafile:
				-Color.class
				-ExportManager.class
				-LayerManager.class
				-Point.class
				-Scene.class
				-PainterObj.class
				-ToolList.class
			testing:
				-painterBrowser.class
				-Main.class		
		src:
			javafile:
				-Color.java
				-ExportManager.java
				-LayerManager.java
				-Point.java
				-Scene.java
				-PainterObj.java
				-ToolList.java
			testing:
				-painterBrowser.java
				-Main.java
		resource:
			-painter_logo.ico
			-painter_logo.png
			-triangle.png
			-circle.png
			-quad.png
			-file.txt
		Assets:
			v1.7.1~v1.9:
				jar files:
					-painter.jar
					-painterBrowser.jar
				Windows:
					-painter.exe
					-painterBrowser.exe
				Ubuntu:
					-painter:
						bin:
							-painter
						lib:
							app:
							runtime:
							libapplauncher.so
							painter.png
					-painterBrowser:
						bin:
							painterBrowser
						lib:
							app:
							runtime:
							libapplauncher.so
							painter.png
				
		-readme

## Abstract structure

	PointerObj:
		Point List:
			Point:
				x,y value
		Color:
			RGB value
		draw method(Graphics g,scale,offsetX,offsetY)
			use g and Point list to draw graphic
			all Point will * scale + (offsetX,offsetY)
		
		drawSurface method(PainterObj)
		
		descripted and load file
		
		isPointInSurface(detacted whether the point is in the PointObj)
		
		changeSize method
		
		move method
			
			Stright surface
			bezier surface
			strignt line
			bezier line
			circle
			Group:
				add element to Group
				disGroup
________________________________________________

		-vehiecle:
			frame
			mainPanel:
				Scene
				toolList
				LayerManager
					
		-PainterObj List:
			PainterObj
		
		-camara:	
			-scale, offsetX,offsetY value
			
		-Operate:
			draggingSurface:
				PainterObj
			draggingPoint:
				Point
			drawer:
				drawPoint method
				call all painterObj draw it self
			refresher:
				refresh layer manager
				refresh scene panel
				
		-export&load system:
		
			-custom file protocol
			
			loader:
				initial loading mode
				file loading mode
			saver:
				file saving
				
		-Layer manager:
			Draggable item's List:
				Draggable item:
					pointing PainterObj
					
		-getter/setter
		
		-Tool list:
		(Component)
			Button:
				-actions
			TextField:
			
		-events Listener:
			mouse listener
			key listener
			file dropped listener
			
## API descripted
	PainterObj:
		addPoint():	give the PainterObj a new Point, you can add Point...p or (double a,double b,PainterObj p), and the p is about which PainterObj have that point
		changeSize(double rol,double cx,double cy): the changeSize method descripted by PainterObj, rol means the changed degree, cx and cy means the certain coordinate
		clone(): give a new but same value PainterObj
		DescriptPoint: it returns the point list to String, actually it's only for the subclass
		draggable():returns wether the painterObj were draggable
		draw(Graphics g:double scale,double offsetX,double offsetY): it's for scene to repaint the painterObj
		getCertain():return a painterObj's certain coordinate
		-getter/setter
		isPointInSurface(int mx,int my,double scale,double offsetX,double offsetY): return whether the point(mx,my) is in the painterObj, at most situation, it means the point's ploygen
		loadfile(String[]array): it's for export load system, it catched the outside file's format,descripted by subclass
		moveX,Y: descripted by painterObj
	
	Scene:
		choice color 
		Note: saveInfo, undo, redo
		addDraggingSurface,Point: let the choosed painterObj or point to be draggable, but don't forget to painterObj.setDraggable(true)
		browserMode: only shows the file,readonly
		execute:start the main painter app
		getAllSurface: returns all painterObj in the scene
		getDraggingPoint,Surface: return the PainterObj which were been choosed
		-getter/setter
		removeSurface: remove the current PainterObj
	
	Export load system:
		exporter
		loader:
			url loading
			files loading(txt loading)